<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image processing on SX-Aurora TSUBASA</title>
    <link>https://sx-aurora-dev.github.io/blog/tags/image-processing/</link>
    <description>Recent content in image processing on SX-Aurora TSUBASA</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 15 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sx-aurora-dev.github.io/blog/tags/image-processing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Image Processing on Aurora</title>
      <link>https://sx-aurora-dev.github.io/blog/post/2019-05-15-imageprocessingsc18/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sx-aurora-dev.github.io/blog/post/2019-05-15-imageprocessingsc18/</guid>
      <description>We have presented several examples of image processing on Aurora at SC18 Exhibition. Some image processing kernels are memory bandwidth intensive because they use random memory access, for example, to access the pixels they are interested in. Aurora with world highest memory bandwidth (1.2TB/s) can fit such kernels.
Here is the performance comparison of some kernels from OpenCV.
We have also ported image processing applications to Aurora. See the poster for details.</description>
    </item>
    
  </channel>
</rss>